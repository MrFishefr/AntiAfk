-- Services
local Players = game:GetService("Players")
local userInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Variables
local autoJumpEnabled = false
local jumpInterval = 0.07 -- Set the interval to 0.07 seconds

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoJumpGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Frame for GUI
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 210) -- Increased height to accommodate new time label
frame.Position = UDim2.new(0.85, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.Draggable = true
frame.Active = true
frame.Parent = screenGui

-- Frame corners --
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 8)
frameCorner.Parent = frame

-- Frame outline --
local frameOutline = Instance.new("UIStroke")
frameOutline.Color = Color3.fromRGB(255, 255, 255) -- White outline
frameOutline.Thickness = 3
frameOutline.Parent = frame


-- Title Label
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
title.Text = "Анти АФК"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 14
title.Parent = frame

-- Title Label corners --
local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

-- Toggle Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(1, 0, 0, 30)
toggleBtn.Position = UDim2.new(0, 0, 0.2, 0.5) -- Y Scale position relative to frame height
toggleBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Text = "Enable Auto Jump"
toggleBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
toggleBtn.Font = Enum.Font.SourceSans
toggleBtn.TextSize = 16
toggleBtn.Parent = frame

-- Toggle Button corners --
local toggleBtnCorner = Instance.new("UICorner")
toggleBtnCorner.CornerRadius = UDim.new(0, 0)
toggleBtnCorner.Parent = toggleBtn

-- Interval Label
local intervalLabel = Instance.new("TextLabel")
intervalLabel.Size = UDim2.new(1, 0, 0, 30)
intervalLabel.Position = UDim2.new(0, 0, 0.4, 0) -- Y Scale position relative to frame height
intervalLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
intervalLabel.Text = "By Zoom_N1 "
intervalLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
intervalLabel.Font = Enum.Font.SourceSans
intervalLabel.TextSize = 14
intervalLabel.Parent = frame

-- Interval Label corners --
local intervalLabelCorner = Instance.new("UICorner")
intervalLabelCorner.CornerRadius = UDim.new(0, 0)
intervalLabelCorner.Parent = intervalLabel

-- New Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, 0, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0.6, 0) -- Y Scale position relative to frame height
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Text = "Статус: Не работает"
statusLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextSize = 14
statusLabel.Parent = frame

-- New Status Label corners --
local statusLabelCorner = Instance.new("UICorner")
statusLabelCorner.CornerRadius = UDim.new(0, 0)
statusLabelCorner.Parent = statusLabel

-- Time Label
local timeLabel = Instance.new("TextLabel")
timeLabel.Name = "TimeLabel"
timeLabel.Size = UDim2.new(1, 0, 0, 30)
timeLabel.Position = UDim2.new(0, 0, 0.8, 0) -- Positioned below StatusLabel
timeLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
timeLabel.Text = "Moscow: --:--:--"
timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timeLabel.Font = Enum.Font.SourceSans
timeLabel.TextSize = 14
timeLabel.Parent = frame

-- Time Label corners --
local timeLabelCorner = Instance.new("UICorner")
timeLabelCorner.CornerRadius = UDim.new(0, 0)
timeLabelCorner.Parent = timeLabel

-- Toggle Auto Jump Function
local function toggleAutoJump()
	autoJumpEnabled = not autoJumpEnabled
	toggleBtn.Text = autoJumpEnabled and "Disable Auto Jump" or "Enable Auto Jump"
	statusLabel.Text = autoJumpEnabled and "Статус: Работает" or "Статус: Не Работает"

	if autoJumpEnabled then
		while autoJumpEnabled do
			-- Wait for the specified interval and jump
			if player.Character and player.Character:FindFirstChild("Humanoid") then
				local humanoid = player.Character.Humanoid
				humanoid.Jump = true -- Trigger the jump
			end
			wait(jumpInterval) -- Wait for the next interval before jumping again
		end
	end
end

-- Toggle Button Click Event
toggleBtn.MouseButton1Click:Connect(toggleAutoJump)

-- Function to update Moscow Time
local function updateMoscowTime()
	local moscowTimeOffset = 3 * 60 * 60 -- UTC+3 in seconds
	local currentTime = os.time()
	local moscowTimestamp = currentTime + moscowTimeOffset
	
	-- os.date with "!*t" returns a table in UTC based on the provided timestamp
	local timeData = os.date("!*t", moscowTimestamp) 
	
	timeLabel.Text = string.format("Время: %02d:%02d:%02d", timeData.hour, timeData.min, timeData.sec)
end

-- Initial call to set the time immediately
updateMoscowTime()

-- Update time every second
task.spawn(function()
	while task.wait(1) do
		if screenGui.Parent ~= nil and timeLabel.Parent ~= nil then -- Check if GUI is still part of the game
			updateMoscowTime()
		else
			break -- Stop the loop if the GUI is removed
		end
	end
end)

